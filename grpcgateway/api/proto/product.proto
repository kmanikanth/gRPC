syntax = "proto3";
package product;
option go_package = "product/";

import "google/api/annotations.proto";

enum ProductType {
  PRODUCT_TYPE_UNSPECIFIED = 0;
  PRODUCT_TYPE_BOOK = 1;
  PRODUCT_TYPE_ELECTRONIC = 2;
  PRODUCT_TYPE_FURNITURE = 3;
}

// all the allowable data type for the fields are listed here - https://developers.google.com/protocol-buffers/docs/proto3#scalar
// additional data types that can be used through imports are listed here - https://developers.google.com/protocol-buffers/docs/overview#data-types
message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  int64 price = 4;
  ProductType type = 5;
  bool in_stock = 6;
  double rating = 7;
  optional uint64 num_reviews = 8;
  repeated string images = 9;
  map<string, string> attributes = 10;
}

message ProductID {
  string product_id = 1;
}

// Prerequistes - https://developers.google.com/protocol-buffers/docs/gotutorial#compiling-your-protocol-buffers
// 1. Install protocal buffer
// 2. Install grpc plugin
// 3. Install protoc-gen-go-grpc plugin

// protoc -I api/proto api/proto/product.proto --go_out=internal/pb --go-grpc_out=internal/pb
// --proto_path=../../git/googleapis "if any external proto files are imported path to that files are mentioned with this flag"
// https://developers.google.com/protocol-buffers/docs/proto3#generating
// protoc --proto_path=IMPORT_PATH --cpp_out=DST_DIR --java_out=DST_DIR --python_out=DST_DIR --go_out=DST_DIR --ruby_out=DST_DIR --objc_out=DST_DIR --csharp_out=DST_DIR path/to/file.proto
service ProductInfo {
  rpc addProduct(Product) returns (ProductID);
  rpc getProduct(ProductID) returns (Product){
    option (google.api.http) = {
      get: "/v1/product/{product_id}"
    };
  };
}